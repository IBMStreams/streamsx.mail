<?xml version="1.0" encoding="UTF-8"?>
<!--
# Licensed Materials - Property of IBM
# Copyright IBM Corp. 2019
# US Government Users Restricted Rights - Use, duplication or
# disclosure restricted by GSA ADP Schedule Contract with
# IBM Corp.
-->
<project name="com.ibm.streamsx.mail" default="all">

	<!-- check streams installation -->
	<property environment="env" />
	<fail unless="env.STREAMS_INSTALL" message="STREAMS_INSTALL not set."/>
	<property name="streams.install" value="${env.STREAMS_INSTALL}"/>
	<property name="spl-mt"          value="${streams.install}/bin/spl-make-toolkit"/>
	
	<property name="src.dir"      location="impl/java/src"/>
	<property name="build.dir"    location="impl/java/classes"/>  <!-- this is not included in sab by default, thus no .class files in sab -->
	<property name="gensrc.dir"   location="impl/java/src-gen"/>  <!-- avoid .java files in jar file -->
	<property name="impl.lib.dir" location="impl/lib"/>
	<property name="lib.dir"      location="lib" />
	<property name="bin.dir"      location="impl/java/bin"/>      <!-- streams studio bin dir / used only on clean target -->
	<property name="gensrc.dir2"  location="impl/java/src-gen2"/> <!-- streams studio bin dir / used only on clean target -->
	<property name="out.dir"      location="output"/>             <!-- streams studio bin dir / used only on clean target -->


	<target name="init">
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${lib.dir}"/>
		<mkdir dir="${impl.lib.dir}"/>
		<mkdir dir="${gensrc.dir}"/>
	</target>

	<target name="all" depends="toolkit" description="Build the toolkit / compatibility target"/>
	
	<target name="clean" depends="clean-studio-artefacts" description="Clean up generated toolkit artifacts">
		<exec executable="${spl-mt}">
			<arg value="--directory"/>
			<arg value="${basedir}"/>
			<arg value="-c"/>
		</exec>
		<delete dir="${build.dir}"/>
		<delete dir="${impl.lib.dir}"/>
		<delete dir="${gensrc.dir}"/>
	</target>

	<target name="clean-all" depends="clean" description="Clean up generated toolkit artifacts and downloaded libraries">
		<delete dir="${lib.dir}"/>
	</target>

	<!-- clean up the studio generated files to avoide duplicate warnings from spl-make-toolkit -->
	<target name="clean-studio-artefacts">
		<delete dir="${bin.dir}"/>
		<delete dir="${gensrc.dir2}"/>
		<delete dir="${out.dir}"/>
	</target>
	
	<path id="cp.streams">
		<pathelement location="${streams.install}/lib/com.ibm.streams.operator.samples.jar" />
	</path>

	<path id="cp.mail">
		<fileset dir="${lib.dir}" includes="*.jar"/>
	</path>

	<target name="toolkit" depends="jar" description="Build the toolkit">
		<exec executable="${spl-mt}">
			<arg value="--directory"/>
			<arg value="${basedir}"/>
		</exec>
	</target>

	<target name="compile" depends="init,maven-deps,clean-studio-artefacts">
		<javac srcdir="${src.dir}" destdir="${build.dir}" debug="true"
			includeantruntime="no">
			<classpath>
				<path refid="cp.streams" />
				<path refid="cp.mail" />
			</classpath>
			<compilerarg line="-s ${gensrc.dir}"/>
		</javac>
	</target>

	<target name="jar" depends="compile">
		<echo>Build jar from ${build.dir}</echo>
		<jar destfile="${impl.lib.dir}/com.ibm.streamsx.mail.jar" basedir="${build.dir}" includes="com/ibm/streamsx/mail/**" filesonly="true"/>
	</target>

	<!-- Downloads libraries using maven -->
	<target name="maven-deps" depends="init,nomaven" if="env.M2_HOME" description="Download required libraries">
		<property name="maven.bin" value="${env.M2_HOME}/bin/mvn"/>
		<available property="pomset" file="${basedir}/pom.xml"/>
		<fail unless="pomset" message="There must be a pom.xml file in com.ibm.streamsx.mail in order to use maven to download necessary dependencies."/> 
		<exec executable="${maven.bin}"  failonerror="true">
			<arg value="dependency:copy-dependencies"/>
			<arg value="-DoutputDirectory=${lib.dir}"/>
		</exec>
	</target>

	<!-- Prints a message if no maven is found. -->
	<target name="nomaven" unless="env.M2_HOME">
		<echo message="M2_HOME not found in environment; expect to find all needed libraries in ${lib.dir} already"/>
	</target>

</project>
